{"ast":null,"code":"import _classCallCheck from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dosseh/WEB-react-router-lab/src/SensorInformation.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nvar SensorInformation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SensorInformation, _Component);\n\n  function SensorInformation() {\n    _classCallCheck(this, SensorInformation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SensorInformation).apply(this, arguments));\n  }\n\n  _createClass(SensorInformation, [{\n    key: \"render\",\n    value: function render() {\n      var id, name, value, type, averageValue, date, unity;\n\n      if (typeof this.props.sensorInformation !== \"undefined\") {\n        var this_selected_sensor = this.props.sensorInformation;\n        id = this_selected_sensor.id.substring(6);\n        name = this_selected_sensor.name;\n        value = Number(this_selected_sensor.data.getlastValues()) ? parseFloat(this_selected_sensor.data.getlastValues()).toFixed(2) : this_selected_sensor.data.getlastValues();\n        type = this_selected_sensor.type;\n        unity = this_selected_sensor.unityOfSensor();\n        averageValue = Number(this_selected_sensor.data.getAverage()) ? parseFloat(this_selected_sensor.data.getAverage()).toFixed(2) : this_selected_sensor.data.getAverage();\n        date = this_selected_sensor.data.getDate();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"ID : \", id, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"NOM : \", name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"VALEUR : \", value, \" \", unity), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"TYPE : \", type), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"VALEUR MOYENNE : \", averageValue, \" \", unity), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" DATE : \", date), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SensorInformation;\n}(Component);\n\nexport default SensorInformation;","map":{"version":3,"sources":["/home/dosseh/WEB-react-router-lab/src/SensorInformation.js"],"names":["React","Component","SensorInformation","id","name","value","type","averageValue","date","unity","props","sensorInformation","this_selected_sensor","substring","Number","data","getlastValues","parseFloat","toFixed","unityOfSensor","getAverage","getDate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;;IAEMC,iB;;;;;;;;;;;;;6BACK;AACP,UAAIC,EAAJ,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,YAA3B,EAAyCC,IAAzC,EAA+CC,KAA/C;;AAEA,UAAI,OAAO,KAAKC,KAAL,CAAWC,iBAAlB,KAAwC,WAA5C,EAAyD;AACvD,YAAIC,oBAAoB,GAAG,KAAKF,KAAL,CAAWC,iBAAtC;AAEAR,QAAAA,EAAE,GAAGS,oBAAoB,CAACT,EAArB,CAAwBU,SAAxB,CAAkC,CAAlC,CAAL;AACAT,QAAAA,IAAI,GAAGQ,oBAAoB,CAACR,IAA5B;AAEAC,QAAAA,KAAK,GAAGS,MAAM,CAACF,oBAAoB,CAACG,IAArB,CAA0BC,aAA1B,EAAD,CAAN,GACJC,UAAU,CAACL,oBAAoB,CAACG,IAArB,CAA0BC,aAA1B,EAAD,CAAV,CAAsDE,OAAtD,CAA8D,CAA9D,CADI,GAEJN,oBAAoB,CAACG,IAArB,CAA0BC,aAA1B,EAFJ;AAIAV,QAAAA,IAAI,GAAGM,oBAAoB,CAACN,IAA5B;AAEAG,QAAAA,KAAK,GAAGG,oBAAoB,CAACO,aAArB,EAAR;AAEAZ,QAAAA,YAAY,GAAGO,MAAM,CAACF,oBAAoB,CAACG,IAArB,CAA0BK,UAA1B,EAAD,CAAN,GACXH,UAAU,CAACL,oBAAoB,CAACG,IAArB,CAA0BK,UAA1B,EAAD,CAAV,CAAmDF,OAAnD,CAA2D,CAA3D,CADW,GAEXN,oBAAoB,CAACG,IAArB,CAA0BK,UAA1B,EAFJ;AAIAZ,QAAAA,IAAI,GAAGI,oBAAoB,CAACG,IAArB,CAA0BM,OAA1B,EAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASlB,EAAT,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUC,IAAV,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYC,KADZ,OACoBI,KADpB,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWH,IAAX,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoBC,YADpB,OACmCE,KADnC,CAfF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYD,IAAZ,CApBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CADF;AA0BD;;;;EAnD6BP,S;;AAsDhC,eAAeC,iBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nclass SensorInformation extends Component {\n  render() {\n    let id, name, value, type, averageValue, date, unity;\n\n    if (typeof this.props.sensorInformation !== \"undefined\") {\n      let this_selected_sensor = this.props.sensorInformation;\n\n      id = this_selected_sensor.id.substring(6);\n      name = this_selected_sensor.name;\n\n      value = Number(this_selected_sensor.data.getlastValues())\n        ? parseFloat(this_selected_sensor.data.getlastValues()).toFixed(2)\n        : this_selected_sensor.data.getlastValues();\n\n      type = this_selected_sensor.type;\n\n      unity = this_selected_sensor.unityOfSensor();\n\n      averageValue = Number(this_selected_sensor.data.getAverage())\n        ? parseFloat(this_selected_sensor.data.getAverage()).toFixed(2)\n        : this_selected_sensor.data.getAverage();\n\n      date = this_selected_sensor.data.getDate();\n    }\n\n    return (\n      <div>\n        <b>ID : {id} </b>\n        <br />\n        <br />\n        <b>NOM : {name}</b>\n        <br />\n        <br />\n        <b>\n          VALEUR : {value} {unity}\n        </b>\n        <br />\n        <br />\n        <b>TYPE : {type}</b>\n        <br />\n        <br />\n        <b>\n          VALEUR MOYENNE : {averageValue} {unity}\n        </b>\n        <br />\n        <br />\n        <b> DATE : {date}</b>\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default SensorInformation;\n"]},"metadata":{},"sourceType":"module"}