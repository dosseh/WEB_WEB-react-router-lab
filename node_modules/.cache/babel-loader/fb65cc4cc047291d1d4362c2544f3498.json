{"ast":null,"code":"import _classCallCheck from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dosseh/WEB-react-router-lab/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var version = function version() {\n  return \"1.0.0\";\n};\nexport var Data =\n/*#__PURE__*/\nfunction () {\n  function Data(value) {\n    _classCallCheck(this, Data);\n\n    this._value = value;\n  }\n\n  _createClass(Data, [{\n    key: \"getAverage\",\n    value: function getAverage() {\n      for (var i = 0; i < this.value.length; i++) {\n        if (!Number(this.value[i])) {\n          return \"Pas de valeur moyenne pour ce capteur !\";\n        }\n      }\n\n      var sum = 0;\n\n      for (i = 0; i < this.value.length; i++) {\n        sum += parseFloat(this.value[i]);\n      }\n\n      return sum / this.value.length;\n    }\n  }, {\n    key: \"getlastValues\",\n    value: function getlastValues() {\n      return \" \" + this.value[this.value.length - 1] + \"\";\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate() {\n      return new Date().toLocaleString();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value || [];\n    },\n    set: function set(value) {\n      this._value = value;\n    }\n  }]);\n\n  return Data;\n}();\nexport var Sensor =\n/*#__PURE__*/\nfunction () {\n  function Sensor(id, name, data, type) {\n    var _this = this;\n\n    _classCallCheck(this, Sensor);\n\n    this.unityOfSensor = function () {\n      HashMapUnity[\"TEMPERATURE\"] = \" °C \";\n      HashMapUnity[\"PERCENT\"] = \" % \";\n      HashMapUnity[\"OPEN_CLOSE\"] = \"\";\n      var values = [];\n      if (HashMapUnity.hasOwnProperty(_this.type)) values.push(HashMapUnity[_this.type]);\n      return values.join(\"\");\n    };\n\n    this._id = id;\n    this._name = name;\n    this._data = data;\n    this._type = type;\n  }\n\n  _createClass(Sensor, [{\n    key: \"id\",\n    get: function get() {\n      return this._id || \"\";\n    },\n    set: function set(id) {\n      this._id = id;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name || \"\";\n    },\n    set: function set(name) {\n      this._name = name;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data || {};\n    },\n    set: function set(data) {\n      this._data = data;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type || \"\";\n    },\n    set: function set(type) {\n      this._type = type;\n    }\n  }]);\n\n  return Sensor;\n}();\nvar HashMapUnity = {};","map":{"version":3,"sources":["/home/dosseh/WEB-react-router-lab/src/Models/Model.js"],"names":["version","Data","value","_value","i","length","Number","sum","parseFloat","Date","toLocaleString","Sensor","id","name","data","type","unityOfSensor","HashMapUnity","values","hasOwnProperty","push","join","_id","_name","_data","_type"],"mappings":"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","sourcesContent":["export const version = () => \"1.0.0\";\n\nexport class Data {\n  constructor(value) {\n    this._value = value;\n  }\n\n  get value() {\n    return this._value || [];\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  getAverage() {\n    for (var i = 0; i < this.value.length; i++) {\n      if (!Number(this.value[i])) {\n        return \"Pas de valeur moyenne pour ce capteur !\";\n      }\n    }\n    var sum = 0;\n    for (i = 0; i < this.value.length; i++) {\n      sum += parseFloat(this.value[i]);\n    }\n    return sum / this.value.length;\n  }\n  getlastValues() {\n    return \" \" + this.value[this.value.length - 1] + \"\";\n  }\n\n  getDate() {\n    return new Date().toLocaleString();\n  }\n}\n\nexport class Sensor {\n  constructor(id, name, data, type) {\n    this._id = id;\n    this._name = name;\n    this._data = data;\n    this._type = type;\n  }\n\n  get id() {\n    return this._id || \"\";\n  }\n  get name() {\n    return this._name || \"\";\n  }\n  get data() {\n    return this._data || {};\n  }\n  get type() {\n    return this._type || \"\";\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  set name(name) {\n    this._name = name;\n  }\n  set data(data) {\n    this._data = data;\n  }\n  set type(type) {\n    this._type = type;\n  }\n\n  unityOfSensor = () => {\n    HashMapUnity[\"TEMPERATURE\"] = \" °C \";\n    HashMapUnity[\"PERCENT\"] = \" % \";\n    HashMapUnity[\"OPEN_CLOSE\"] = \"\";\n\n    var values = [];\n    if (HashMapUnity.hasOwnProperty(this.type))\n      values.push(HashMapUnity[this.type]);\n    return values.join(\"\");\n  };\n}\n\nconst HashMapUnity = {};\n"]},"metadata":{},"sourceType":"module"}